# Generated by Django 3.1.7 on 2023-06-25 16:37

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('bookingApp', '0002_days'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('FirstName', models.TextField(blank=True, null=True)),
                ('LastName', models.TextField(blank=True, null=True)),
                ('UserName', models.TextField(blank=True, null=True)),
                ('Email', models.EmailField(max_length=254, unique=True)),
                ('PhoneNumber', models.TextField(blank=True, null=True)),
                ('Dob', models.TextField(blank=True, null=True)),
                ('RoleType', models.IntegerField(default=1)),
                ('RoleName', models.TextField(default='User')),
                ('Creation_Time', models.DateTimeField(default=django.utils.timezone.now)),
                ('Deletion_Time', models.DateTimeField(blank=True, default=None, null=True)),
                ('IsDeleted', models.BooleanField(blank=True, default=False, null=True)),
                ('IsActive', models.BooleanField(blank=True, default=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
